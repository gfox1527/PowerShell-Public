{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the SQL logical server."
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password of the SQL logical server."
            }
        },
        "transparentDataEncryption": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "defaultValue": "Enabled",
            "metadata": {
                "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
            }
        },
        "privateEndpointName": {
            "type": "string",
            "metadata": {
                "description": "Private Link Endpoint Name"
            }
        },
        "pvtendpointdnsgroupname": {
            "type": "string",
            "metadata": {
                "description": "Private Endpoint Group DNS Name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "keyName": {
            "type": "String",
            "metadata": {
                "description": "The Key Name for this instance."
            }
        }
    },
    "variables": {
        "subscriptionId": "[subscription().id]",
        "resourceGroupName": "[resourceGroup().name]",
        "databaseName": "myDatabase",
        "transparentDataEncryption": "current",
        "sqlServerName": "[concat('sqlserver', uniqueString(subscription().id, resourceGroup().id))]",  
        "privateDnsZoneName": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
        "vnetName": "myVirtualNetwork",
        "vnetAddressPrefix": "10.0.0.0/16",
        "subnetAddressPrefix": "10.0.0.0/24",
        "subnetName": "mySubnetName",
        "privateLinkServiceId": "[resourceID(variables('sqlServerName'), environment().suffixes.keyvaultDns)]",
        "ServerKeyName": "[concat(variables('KeyName'),'_',variables('serverKeyName'),'_current')]",
        "key_Vault": "myKeyVaultName",
        "keyName": "myKeyName"
    },
    "resources": [
        {
            "name": "[concat('sqlserver', uniqueString(subscription().id, resourceGroup().id))]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-02-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
            }
        },
        {
            "name": "[variables('databaseName')]",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "properties": {
                "[variables('databaseName')]"
            }
        },
        {
            "name": "[concat(variables('sqlServername'), '/master/Current')]",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2021-02-01-preview",
            "properties": {
            "state": "[parameters('transparentDataEncryption')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                ],
        },
        {
            "name": "AllowAllMicrosoftAzureIps",
            "type": "firewallrules",
            "apiVersion": "2020-02-02-preview",
            "location": "[parameters('location')]",
            "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "dependsOn": [
                        "[variables('sqlServerName')]"
                    ]
        },
        {
            "name": "[concat(variables('sqlServerName'), '/current')]",
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2021-02-01-preview",
            "properties": {
                "autoRotationEnabled": false,
                "serverKeyName": "[variables('ServerKeyName')]",
                "serverKeyType": "AzureKeyVault"
            },
            "dependsOn": [
                "addAccessPolicy",
                "[resourceId('Microsoft.SQL/servers/keys', variables('sqlServerName'), variables('ServerKeyName'))]"
            ]
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "type": "Microsoft.Networks/virtualNetworks/subnets"
                        "dependsOn": [
                            "[variables('vnetName')]"
                            "[variables('vnetAddressPrefix')]"
                        ]
                        "properties": {
                            "subnetAddressPrefix": "[variables('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },   
        },
        {
            "name": "[parameters('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('sqlServerName')]",
                "[variables('key_Vault')]"
                "[variables('privateLinkServiceId')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[Parameters('privateEndpointName')]",
                        "privateLinkServiceId": "[variables('privateLinkServiceId')]",
                        "groupIds": [
                            "sqlServer"
                        ],
                        "privateLinkServiceConnectionState": {
                                "actionsRequired": "None"
                    }
                }
            ]
        },
        {
            "name": "[variables('privateDnsZoneName')]",
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-01-01",
            "location": "global",
            "dependsOn": [
                "[variables('vnetName')]"
            ],
            "properties": ""
        },
        {
            "name": "[concat(variables('privateDnsZoneName'), '/', variables('privateDnsZoneName'), '-link')]",
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-01-01",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
            }
        },
        {
            "name": "[parameters('pvtendpointdnsgroupname')]",
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[parameters('privateEndpointName')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config1",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('key_Vault')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-04-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('sqlServerName')]"
            ]
            "properties": {
                "serverKeyType": "AzureKeyVault",
                "uri": "[concat(reference(resourceId(variables('resourceGroupName'), 'Microsoft.KeyVault/vaults/', variables('key_Vault')), '2020-02-02-preview', 'Full').properties.vaultUri, 'keys/', parameters('keyName'))]"
                "addAccessPolicy": [
                    "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                    "permissions": {
                        "keys": "[parameters('keyPermissions')]",
                        "secrets": "[parameters('secretsPermissions')]"
                    }
                ]
            },
            "networkAcls": {
                "defaultAction": "Allow"
            }
        },
        {
            "name": "[variables('keyName')]",
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2019-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', concat(variables('sqlServerName')))]"
            ],
            "properties": {
                "value": "[variables('keyName')]",
                "attributes": {
                    "enabled": true,
                    "exp": "[reference('convertDataToUnixAndAdd1Year').outputs.expireDate]"
                },
                "kty": "RSA",
                "keysize": 2048
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "addAccessPolicy",
            "resourceGroup": "[variables('resourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(variables('Key_Vault'), '/add')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[variables('subscriptionId')]",
                                        "objectId": "[reference(resourceId('Microsoft.Sql/servers/', variables('sqlServerName')), '2019-06-01-preview', 'Full').identity.principalId]",
                                        "permissions": {
                                            "keys": [
                                                "get",
                                                "wrapKey",
                                                "unwrapKey"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('sqlServerName'), '/', variables('ServerKeyName'))]",
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2020-02-02-preview",
            "dependsOn": [
                "addAccessPolicy",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "properties": {
                "serverKeyType": "AzureKeyVault",
                "uri": "[concat(reference(resourceId(variables('resourceGroupName'), 'Microsoft.KeyVault/vaults/', variables('Key_Vault')), '2018-02-14-preview', 'Full').properties.vaultUri, 'keys/', parameters('KeyName'))]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlServerName'), '/current')]",
            "properties": {
                "autoRotationEnabled": false,
                "serverKeyName": "[variables('ServerKeyName')]",
                "serverKeyType": "AzureKeyVault"
            },
            "dependsOn": [
                "addAccessPolicy",
                "[resourceId('Microsoft.SQL/servers/keys', variables('sqlServerName'), variables('ServerKeyName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "ConvertDateToUnixAndAdd1Year",
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "1",
                "azPowerShellVersion": "3.0",
                "timeout": "PT30M",
                "arguments": "", 
                "primaryScriptUri": "https://raw.githubusercontent.com/jakermey/PowerShell-Public/main/ARM/WB/WBsqldatabase.ps1",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }
    ]
}
    ],
    "outputs": {
        "sqlServerFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName]"
        },
        "databaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        }
    }
}